{"version":3,"sources":["clean.js"],"names":["budget","Object","freeze","value","description","user","spendingLimits","gustavo","matilda","getLimit","addExpense","state","limits","cleanUser","toLowerCase","newBudget1","newBudget2","newBudget3","console","log","checkExpenses","entry","flag","logBigExpenses","bigLimit","output","slice"],"mappings":"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","file":"clean.55562fe9.js","sourceRoot":"..","sourcesContent":["'strict mode';\n\nconst budget = Object.freeze([\n  { value: 250, description: 'Sold old TV 📺', user: 'gustavo' },\n  { value: -45, description: 'Groceries 🥑', user: 'gustavo' },\n  { value: 3500, description: 'Monthly salary 👩‍💻', user: 'gustavo' },\n  { value: 300, description: 'Freelancing 👩‍💻', user: 'gustavo' },\n  { value: -1100, description: 'New iPhone 📱', user: 'gustavo' },\n  { value: -20, description: 'Candy 🍭', user: 'matilda' },\n  { value: -125, description: 'Toys 🚂', user: 'matilda' },\n  { value: -1800, description: 'New Laptop 💻', user: 'gustavo' },\n]);\n\nconst spendingLimits = Object.freeze({\n  gustavo: 1500,\n  matilda: 100,\n});\n// spendingLimits.jay = 200;\n\nconst getLimit = user => spendingLimits?.[user] ?? 0;\n\n// Pure function\nconst addExpense = function (\n  state,\n  limits,\n  value,\n  description,\n  user = 'gustavo'\n) {\n  const cleanUser = user.toLowerCase();\n\n  return value <= getLimit(cleanUser)\n    ? [...state, { value: -value, description, user: cleanUser }]\n    : state;\n};\nconst newBudget1 = addExpense(budget, spendingLimits, 10, 'Pizza 🍕');\nconst newBudget2 = addExpense(\n  newBudget1,\n  spendingLimits,\n  100,\n  'Going to movies 🍿',\n  'Matilda'\n);\nconst newBudget3 = addExpense(newBudget2, spendingLimits, 200, 'Stuff', 'Jay');\nconsole.log(newBudget3);\n\nconst checkExpenses = function () {\n  for (const entry of budget) {\n    if (entry.value < -getLimit(entry.user)) {\n      entry.flag = 'limit';\n    }\n  }\n};\ncheckExpenses();\n\nconst logBigExpenses = function (bigLimit) {\n  let output = '';\n  for (const entry of budget) {\n    output +=\n      entry.value <= -bigLimit ? `${entry.description.slice(-2)} /` : '';\n  }\n  output = output.slice(0, -2); // Remove last '/ '\n  console.log(output);\n};\n\nconsole.log(budget);\nlogBigExpenses(500);\n"]}